import de.undercouch.gradle.tasks.download.Download

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'de.undercouch:gradle-download-task:3.2.0'
  }
}
plugins {
  id 'java-library'
  id "com.github.johnrengelman.shadow" version "4.0.3"
}
sourceSets {
  main {
    resources {
      srcDir('src/resources')
    }
  }
}
version '0.0.1'
dependencies {
  api 'org.apache.commons:commons-math3:3.6.1'
  implementation 'com.google.guava:guava:23.0'
  testImplementation 'junit:junit:4.12'
  compile group: 'com.github.jnr', name: 'jnr-ffi', version: '2.1.8'
}

repositories {
  jcenter()
}
def nativeLibsVersion = 'v0.4.0'
def tempDownloadDir = "${projectDir}/.tempDownloads"

static def getCombinations() {
  def platforms = ['win', 'linux', 'osx']
  def architectures = ['x64']
  [platforms, architectures].combinations().findAll()
}
task ("downloadNativeLibs", type: Download) {
  File dir = new File(tempDownloadDir)
  if (dir.exists()) {
    assert dir.deleteDir()
  }
  def endPoints = getCombinations().collect {
    "https://s3.eu-west-2.amazonaws.com/system-uri/system_uri-${nativeLibsVersion}-${it[0]}-${it[1]}.zip"
  }
  src(endPoints)
  dest tempDownloadDir
}

tasks.addRule('Pattern: unzip-<ID>') { String taskName ->
  if (taskName.startsWith('unzip')) {
    task(taskName, type: Copy) {
      def args = name.split('-')
      String platform = args[1]
      String arch = args[2]
      from zipTree("${tempDownloadDir}/system_uri-${nativeLibsVersion}-${platform}-${arch}.zip")
      into "${projectDir}/resources/native"
    }
  }
}

task('download-nativeLibs') {
  dependsOn << [ 'downloadNativeLibs', getCombinations().collect() {
    "unzip-${it[0]}-${it[1]}" } ]
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
